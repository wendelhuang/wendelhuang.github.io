---
layout: post
title:  "ruby gems"
date:   2016-05-22
categories: tools ruby gems
---

* 目录
{:toc}

***

# ruby gems的安装卸载

## 安装ruby gems到本地目录
当用非root用户安装gem的时候，会报没有目录权限的错误，大致如下
{% highlight ruby %}
ERROR:  While executing gem ... (Gem::FilePermissionError)
      You don't have write permissions into the /usr/local/ruby/gems/ruby-1.9.3-p327 directory.
{% endhighlight %}
这个时候我们在想可否将gem安装在本用户的指定目录，能解决这个问题，答案是可以的，方法如下  
创建文件$HOME/.gemrc文件，该文件也可能已经存在，追加以下内容
{% highlight ruby %}
gemhome: /home/martin/.gems
gempath:
  - /home/martin/.gems
  - /usr/local/ruby/gems/ruby-1.9.2-p327
{% endhighlight %}

接下来，将这个本地目录加入环境变量PATH中，以防止运行bundle这样的可执行程序时找不到目录
{% highlight bash %}
/usr/local/lib/ruby/2.1.0/rubygems/dependency.rb:298:in `to_specs': Could not find 'bundler' (>= 0) among 8 total gem(s) (Gem::LoadError)
  from /usr/local/lib/ruby/2.1.0/rubygems/dependency.rb:309:in `to_spec'
  from /usr/local/lib/ruby/2.1.0/rubygems/core_ext/kernel_gem.rb:53:in `gem'
  from /home/develop/.gems/bin/bundle:22:in `<main>'
{% endhighlight %}

执行下面的命令
{% highlight ruby %}
export GEM_HOME=$HOME/.gems
export PATH=$HOME/.gems/bin:$PATH
{% endhighlight %}
这个时候再运行bundle install，就将gem安装到指定的本地目录了。

## 从本地离线安装ruby gems
下载gems后，在gem目录中运行
{% highlight ruby %}
gem install ./(gem-name).gem --local
{% endhighlight %}

## 卸载ruby gems
{% highlight ruby %}
gem uninstall gem-name
{% endhighlight %}

## 查看安装路径
{% highlight ruby %}
gem which gem-name #gem which rails
{% endhighlight %}

# ruby gem的create和build

## 新建一个gem
bundle内建支持gem的创建,使用bundle命令可以新建一个gem
{% highlight bash %}
bundle gem my_mongoid
      create  my_mongoid/Gemfile
      create  my_mongoid/Rakefile
      create  my_mongoid/LICENSE.txt
      create  my_mongoid/README.md
      create  my_mongoid/.gitignore
      create  my_mongoid/my_mongoid.gemspec
      create  my_mongoid/lib/my_mongoid.rb
      create  my_mongoid/lib/my_mongoid/version.rb
{% endhighlight %}

新建gem所依赖的gem文件放在my_mongoid.gemspec文件里.  
这个gem版本号以字符串常量的形式放在lib/my_mongoid/version.rb里.  
{% highlight ruby %}
module MyMonoid
  VERSION = "0.2.1"
end
{% endhighlight %}

## gem的build打包
使用rake管理Gem:
{% highlight bash %}
rake -T
rake build    # Build my_monoid-0.2.1.gem into the pkg directory
rake install  # Build and install my_monoid-0.2.1.gem into system gems
rake release  # Create tag v0.2.1 and build and push my_monoid-0.2.1.gem to...
{% endhighlight %}

使用rake build构建gem,注意需要把my_monoid\my_monoid.gemspec里的
{% highlight ruby %}
spec.description   = %q{TODO: Write a gem description}
spec.summary       = %q{TODO: Write a gem summary}
{% endhighlight %}
改为
{% highlight ruby %}
spec.description   = %q{Write a gem description}
spec.summary       = %q{Write a gem summary}
{% endhighlight %}
否则会出现下面的错误
{% highlight bash %}
rake build
rake aborted!
ERROR:  While executing gem ... (Gem::InvalidSpecificationException)
    "FIXME" or "TODO" is not a description

Tasks: TOP => build
(See full trace by running task with --trace)
{% endhighlight %}

修改后可以build成功:
{% highlight bash %}
rake build
my_monoid 0.2.1 built to pkg/my_monoid-0.2.1.gem.
{% endhighlight %}

## create asset gem
[xdite的博客](http://blog.xdite.net/posts/2012/01/04/how-to-pack-a-asset-gem/)

